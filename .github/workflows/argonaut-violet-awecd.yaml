

name: "Build and Push to CR"

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build and Push Img
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}
      - name: Fetch repo
        uses: actions/checkout@v2
      - name: Get Short SHA
        id: get_sha
        run: echo ::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Github container repo
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: argonautdev
          password: ${{ secrets.ARG_violetregistry_ACCESS_TOKEN }}
      - name: Build Image and Push
        uses: docker/build-push-action@v2
        id: build-push
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/argonautdev/awecd:${{ steps.get_sha.outputs.SHA_SHORT }}
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Argonaut
    needs: build
    steps:
      - name: Fetch repo
        uses: actions/checkout@v2
      - name: Get Short SHA
        id: get_sha
        run: echo ::set-output name=SHA_SHORT::$(git rev-parse --short HEAD)
      - name: Download art
        run: curl --silent https://github.com/argonautdev/public/releases/latest/download/art-linux -L -o art
      - name: Configure art
        run: |
          chmod +x ./art
          sudo mv ./art /usr/local/bin/art
          art configure --key ${{ secrets.ART_KEY }} --secret ${{ secrets.ART_SECRET }}
          art app deploy -f .art/argonaut-violet-awecd.yaml --set image="ghcr.io/argonautdev/awecd" --set argonaut.pipelineID="${{ github.run_id }}" --set argonaut.provider="github" --set imageTag="${{ steps.get_sha.outputs.SHA_SHORT }}"   --set appName="awecd"   --set argonaut.env="violet"   --set argonaut.region="us-east-1"   --set argonaut.cluster="violet"   --set argonaut.serviceType="stateless"   --set argonaut.imageRegistry="violetregistry" 
